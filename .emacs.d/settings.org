#+TITLE: Emacs Configuration File

This file is a literate-programming based configuration file for Emacs. It
can be parsed with =org-babel-load-file= to extract the configuration from
the prose and get a working emacs configuration.

* Core Configuration
** Package Sources

  First and foremost, configure =package.el= and the package repositories.

  #+BEGIN_SRC emacs-lisp
  (setq evil-want-C-u-scroll t) ; Use vim's C-u
  (require 'package)

  (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
  (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
  (add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

  (package-initialize)
  #+END_SRC

  It also helps when going from a clean install to automatically install all
  required packages to go from a fresh setup to a fully configured one without
  user interaction:

  #+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  (eval-when-compile
    (require 'use-package))
  #+END_SRC

** Default Packages

   The following is a list of required packages that the configuration uses:

   #+BEGIN_SRC emacs-lisp
   ;; ... TODO ...
   #+END_SRC


   #+BEGIN_SRC emacs-lisp
   (use-package evil           :ensure t)
   (use-package evil-leader    :ensure t)
   (use-package linum-relative :ensure t)
   (use-package helm           :ensure t)
   (use-package magit          :ensure t)
   #+End_SRC

** Evil Mode - vi(m) emulation

   There is one thing that I cannot live without: modal editing. My main
   requirement for a succesful switch to Emacs is beyond a doubt =vim=-like key
   bindings. All of the key bindings rely on Evil mode =states=, the equivalent
   of vim mode

   #+BEGIN_SRC emacs-lisp
   (global-evil-leader-mode)
   (require 'evil)
   (evil-mode t)
   #+END_SRC

** Helm - Fuzzy Matching/Narrowing

   #+BEGIN_SRC emacs-lisp
   (require 'helm-config)
   (helm-mode 1)
   #+END_SRC

    Use the =fd= tool instead of the default file finder.

** Backups

   By default, emacs drops two backup files (=#file#= and =file~=)
   next to every saved file. I don't like this approach as it leaves a
   bunch of files lying around. I much prefer a centralized backup
   directory:

   #+BEGIN_SRC emacs-lisp
   (setq backup-directory-alist '(("." . "~/.emacs.d/bak")))
   #+END_SRC

* Look and Feel

    This section configures the look and feel of Emacs. The splash
    screen is not necessary so it is turned off. So are the toolbar
    and menu bar.

    #+BEGIN_SRC emacs-lisp
    (setq inhibit-startup-screen t)
    (tool-bar-mode 0)
    (menu-bar-mode 0)
    (scroll-bar-mode 0)
    #+END_SRC

    It goes without saying that a nice color scheme is mandatory. I
    personally use =dracula= whenever possible for the retrofuture
    vibe. Also show relative line numbers for quick motions.

    #+BEGIN_SRC emacs-lisp
    (require 'dracula-theme)
    (linum-relative-mode)
    #+END_SRC

** Org Mode Settings

* Editing
    The corner stone of modern IDEs is language services for intelligent
    completions and refactors. Emacs has bindings for the language
    server protocol in the form of =emacs-lsp=

    #+BEGIN_SRC emacs-lisp
    #+END_SRC
    
    And of course, spaces are superior to tabs for indentation.

    #+BEGIN_SRC emacs-lisp
    #+END_SRC

* Key Bindings
** Core Commands
    Some old habits die hard: Use =Ctrl+S= to save the current buffer.
    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "C-s") 'save-buffer)
    #+END_SRC

    Bind a =<leader>= similar to vim:
    #+BEGIN_SRC emacs-lisp
    (evil-leader/set-leader "<SPC>")
    #+END_SRC

    It's also a good idea to bind =M-x= to the helm variant
    #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-x") 'helm-M-x)
    #+END_SRC

** Navigation

    First, define basic window navigation hotkeys:

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "M-h") 'evil-window-left)
    (define-key evil-normal-state-map (kbd "M-j") 'evil-window-down)
    (define-key evil-normal-state-map (kbd "M-k") 'evil-window-up)
    (define-key evil-normal-state-map (kbd "M-l") 'evil-window-right)

    (evil-leader/set-key "q" 'delete-window)
    #+END_SRC

    Next, define functions to open files and buffers:

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd ";") 'helm-mini)
    #+END_SRC

    =Ctrl+P= is a very common "go to anything..." shortcut in modern
    editors. Let's have the same. There are a few additional
    considerations for cross-platform support here: The tool =fd= is
    not always available.

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "C-p") 'helm-for-files)
    #+END_SRC
