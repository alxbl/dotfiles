#+TITLE: Emacs Configuration File

This file is a literate-programming based configuration file for Emacs. It
can be parsed with =org-babel-load-file= to extract the configuration from
the prose and get a working emacs configuration.

* Core Configuration

    First and foremost, configure =package.el= and the package repositories.

    #+BEGIN_SRC emacs-lisp
    (require 'package)

    (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
    (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
    (add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

    (package-initialize)
    #+END_SRC

    It also helps when going from a clean install to automatically install all
    required packages to go from a fresh setup to a fully configured one without
    user interaction:

    #+BEGIN_SRC emacs-lisp
    (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

    (eval-when-compile
    (require 'use-package))
    #+END_SRC

   The following is a list of required packages that the configuration uses:

   #+BEGIN_SRC emacs-lisp
   ;; ... TODO ...
   #+END_SRC


   #+BEGIN_SRC emacs-lisp
   (use-package evil           :ensure t)
   (use-package evil-leader    :ensure t)
   (use-package linum-relative :ensure t)
   (use-package helm           :ensure t)
   (use-package magit          :ensure t)
   #+End_SRC

** Helm - Fuzzy Matching/Narrowing

   #+BEGIN_SRC emacs-lisp
   (require 'helm-config)
   (helm-mode 1)
   #+END_SRC

** Auxiliary files

   By default, emacs drops two backup files (=#file#= and =file~=)
   next to every saved file. I don't like this approach as it leaves a
   bunch of files lying around. I much prefer a centralized backup
   directory:

   #+BEGIN_SRC emacs-lisp
   (setq backup-directory-alist '(("." . "~/.emacs.d/bak")))
   #+END_SRC
   
    Prevent =customize.el= stuff from getting into =init.el=.
    #+BEGIN_SRC emacs-lisp
    (setq custom-file "~/.emacs.d/custom.el")
    (load custom-file)
    #+END_SRC

* Look and Feel

    Disable the emacs splash screen, toolbar and menu bar for maximum
    minimalism.

    #+BEGIN_SRC emacs-lisp
    (setq inhibit-startup-screen t)
    (tool-bar-mode 0)
    (menu-bar-mode 0)
    (scroll-bar-mode 0)
    #+END_SRC

    Use =dracula= and relative line numbering to faciliate vim motions.

    #+BEGIN_SRC emacs-lisp
    (require 'dracula-theme)
    (linum-relative-mode t)
    #+END_SRC
    
   Set some default key bindings:
    
* Package Configuration

    This section provides configuration for individual packages.

** Org Mode
** Helm

    Open files and buffers with =;=.

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd ";") 'helm-mini)
    #+END_SRC

    =Ctrl+P= is a very common "go to anything..." shortcut in modern
    editors. Let's have the same. There are a few additional
    considerations for cross-platform support here: The tool =fd= is
    not always available. This still needs some work.

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "C-p") 'helm-for-files)
    #+END_SRC

** Evil Mode

    Evil mode must be the last package to be configured. This is
    because it overrides several other mode's keystrokes.

*** Key bindings
    
    =Ctrl-S= is almost universal for save file...

    #+BEGIN_SRC emacs-lisp
    (setq evil-want-C-u-scroll t) ; Use vim's C-u
    (global-set-key (kbd "C-s") 'save-buffer)
    #+END_SRC

    Bind =M-x= to the helm variant

    #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-x") 'helm-M-x)
    #+END_SRC

    Bind a =<leader>=-key similar to vim:

    #+BEGIN_SRC emacs-lisp
    (evil-leader/set-leader "<SPC>")
    #+END_SRC

    Define basic window navigation hotkeys:

    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "M-h") 'evil-window-left)
    (define-key evil-normal-state-map (kbd "M-j") 'evil-window-down)
    (define-key evil-normal-state-map (kbd "M-k") 'evil-window-up)
    (define-key evil-normal-state-map (kbd "M-l") 'evil-window-right)

    (evil-leader/set-key "q" 'delete-window)
    #+END_SRC

* Enable Evil

    There is one thing that I cannot live without: modal editing. My main
    requirement for a succesful switch to Emacs is beyond a doubt =vim=-like key
    bindings. All of the key bindings rely on Evil mode =states=, the equivalent
    of vim mode. Evil needs to loaded last in order to properly override keyboard
    shortcuts.

    #+BEGIN_SRC emacs-lisp
    (global-evil-leader-mode)
    (require 'evil)
    (evil-mode t)
    #+END_SRC
